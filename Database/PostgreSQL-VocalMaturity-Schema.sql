---------------------------------------------------------------------------------------------------
--  @author:         Alex Gheith
--  @copyright:      Copyright 2019, Neuro-developmental Disorders Lab (NDD), Purdue University
--  @status:         Development
--  @Description:    The DB Schema definition for the Vocal Maturity Coding Project (VMC).
--                   This is the main DDL file that creates all tables and relations.
---------------------------------------------------------------------------------------------------

-- Initial setup parameters.

--SET statement_timeout = 0;
--SET lock_timeout = 0;
--SET idle_in_transaction_session_timeout = 0;
--SET client_encoding = 'UTF8';
--SET standard_conforming_strings = on;
--SELECT pg_catalog.set_config('search_path', '', false);
--SET check_function_bodies = false;
--SET xmloption = content;
--SET client_min_messages = warning;
--SET row_security = off;

-------------------------------------------------------------------------------
-- Creation of the schema begins here.
-------------------------------------------------------------------------------
CREATE SCHEMA IF NOT EXISTS "Main";

COMMENT ON SCHEMA "Main" IS 'Standard Public Schema';

SET default_tablespace = '';
SET default_with_oids = false;


-------------------------------------------------------------------------------
-- Creation of the tables begins here.
-- We start with the root tables to simplify creation of constraints.
-------------------------------------------------------------------------------

-- TABLE:   DataUseOption
---------------------------------------
DROP TABLE IF EXISTS "Main"."DataUseOption" CASCADE;

CREATE TABLE "Main"."DataUseOption" (
    "DataUseOptionID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 100 INCREMENT BY 100),
    "ConsentOptionNumber" smallint NOT NULL,
    "Description" varchar(100) NOT NULL,
    "AddedOn" timestamp NOT NULL DEFAULT now(),
    "ModifiedOn" timestamp NOT NULL DEFAULT now(),

    CONSTRAINT "PK_DataUseOption" PRIMARY KEY ("DataUseOptionID")
);

COMMENT ON TABLE "Main"."DataUseOption" IS 'Defines how the audio is used, as defined by the participants'' parents.';

-- TABLE:   ErrorCode
---------------------------------------
DROP TABLE IF EXISTS "Main"."ErrorCode" CASCADE;

CREATE TABLE "Main"."ErrorCode" (
    "ErrorCodeID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 100 INCREMENT BY 100),
    "Symbol" varchar(5) NOT NULL,
    "Description" varchar(256) NOT NULL,
    "AddedOn" timestamp NOT NULL DEFAULT now(),
    "ModifiedOn" timestamp NOT NULL DEFAULT now(),
    
    CONSTRAINT "PK_ErrorCode" PRIMARY KEY ("ErrorCodeID")
);

COMMENT ON TABLE "Main"."ErrorCode" IS 'Defines the error codes provided by LENA.';

-- TABLE:   ExclusionType
---------------------------------------
DROP TABLE IF EXISTS "Main"."ExclusionType" CASCADE;

CREATE TABLE "Main"."ExclusionType" (
    "ExclusionTypeID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 100 INCREMENT BY 100),
    "Description" varchar(100) NOT NULL,
    "AddedOn" timestamp NOT NULL DEFAULT now(),
    "ModifiedOn" timestamp NOT NULL DEFAULT now(),
    
    CONSTRAINT "PK_ExclusionType" PRIMARY KEY ("ExclusionTypeID")
);

COMMENT ON TABLE "Main"."ExclusionType" IS 'Defines the reason behind excluding any given time duration during the recording, e.g., nap time, scrub time, etc.';

-- TABLE:   GeneticRisk
---------------------------------------
DROP TABLE IF EXISTS "Main"."GeneticRisk" CASCADE;

CREATE TABLE "Main"."GeneticRisk" (
    "GeneticRiskID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 100 INCREMENT BY 100),
    "Description" varchar(100) NOT NULL,
    "AddedOn" timestamp NOT NULL DEFAULT now(),
    "ModifiedOn" timestamp NOT NULL DEFAULT now(),
    
    CONSTRAINT "PK_GeneticRisk" PRIMARY KEY ("GeneticRiskID")
);

COMMENT ON TABLE "Main"."GeneticRisk" IS 'Defines the possible genetic conditions associated with participants.';

-- TABLE:   RecordingType
---------------------------------------
DROP TABLE IF EXISTS "Main"."RecordingType" CASCADE;

CREATE TABLE "Main"."RecordingType" (
    "RecordingTypeID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 100 INCREMENT BY 100),
    "Description" varchar(100) NOT NULL,
    "AddedOn" timestamp NOT NULL DEFAULT now(),
    "ModifiedOn" timestamp NOT NULL DEFAULT now(),
    
    CONSTRAINT "PK_RecordingType" PRIMARY KEY ("RecordingTypeID")
);

COMMENT ON TABLE "Main"."RecordingType" IS 'Defines the type of the recording, i.e home, lab (assessment), etc.';

-- TABLE:   SelectionCriterion
---------------------------------------
DROP TABLE IF EXISTS "Main"."SelectionCriterion" CASCADE;

CREATE TABLE "Main"."SelectionCriterion" (
    "SelectionCriterionID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 100 INCREMENT BY 100),
    "Description" varchar(100) NOT NULL,
    "Symbol" bpchar(2) NOT NULL,
    "AddedOn" timestamp NOT NULL DEFAULT now(),
    "ModifiedOn" timestamp NOT NULL DEFAULT now(),
    
    CONSTRAINT "PK_SelectionCriterion" PRIMARY KEY ("SelectionCriterionID")
);

COMMENT ON TABLE "Main"."SelectionCriterion" IS 'Defines how an utterance was selected for coding, i.e. high volubility, random selection, etc.';

-- TABLE:   Sex
---------------------------------------
DROP TABLE IF EXISTS "Main"."Sex" CASCADE;

CREATE TABLE "Main"."Sex" (
    "SexID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 100 INCREMENT BY 100),
    "Description" varchar(100) NOT NULL,
    "AddedOn" timestamp NOT NULL DEFAULT now(),
    "ModifiedOn" timestamp NOT NULL DEFAULT now(),
    
    CONSTRAINT "PK_Sex" PRIMARY KEY ("SexID")
);

-- TABLE:   UserType
---------------------------------------
DROP TABLE IF EXISTS "Main"."UserType" CASCADE;

CREATE TABLE "Main"."UserType" (
    "UserTypeID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 100 INCREMENT BY 100),
    "Description" varchar(256) NOT NULL,
    "AddedOn" timestamp NOT NULL DEFAULT now(),
    "ModifiedOn" timestamp NOT NULL DEFAULT now(),
    
    CONSTRAINT "PK_UserType" PRIMARY KEY ("UserTypeID")
);

COMMENT ON TABLE "Main"."UserType" IS 'Defines the current level of coder, for categorization.';

-- TABLE:   UtteranceType
---------------------------------------
DROP TABLE IF EXISTS "Main"."UtteranceType" CASCADE;

CREATE TABLE "Main"."UtteranceType" (
    "UtteranceTypeID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 100 INCREMENT BY 100),
    "Description" varchar(50) NOT NULL,
    "AddedOn" timestamp NOT NULL DEFAULT now(),
    "ModifiedOn" timestamp NOT NULL DEFAULT now(),
    
    CONSTRAINT "PK_UtteranceType" PRIMARY KEY ("UtteranceTypeID")
);

COMMENT ON TABLE "Main"."UtteranceType" IS 'Defines whether the utterance is a speech, non-speech, or anything else.';

-- TABLE:   UtteranceTypeAnnotation
---------------------------------------
DROP TABLE IF EXISTS "Main"."UtteranceTypeAnnotation" CASCADE;

CREATE TABLE "Main"."UtteranceTypeAnnotation" (
    "UtteranceTypeAnnotationID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 100 INCREMENT BY 100),
    "UtteranceTypeID" integer NOT NULL,
    "Description" varchar(50) NOT NULL,
    "AddedOn" timestamp NOT NULL DEFAULT now(),
    "ModifiedOn" timestamp NOT NULL DEFAULT now(),
    
    CONSTRAINT "PK_UtteranceTypeAnnotation" PRIMARY KEY ("UtteranceTypeAnnotationID"),
    CONSTRAINT "FK_UtteranceTypeAnnotation_UtteranceType" FOREIGN KEY ("UtteranceTypeID") REFERENCES "Main"."UtteranceType" ("UtteranceTypeID")
);

COMMENT ON TABLE "Main"."UtteranceTypeAnnotation" IS 'Provides more details about utterance types, e.g., laughing, crying, etc.';

-- TABLE:   Participant
---------------------------------------
DROP TABLE IF EXISTS "Main"."Participant" CASCADE;

CREATE TABLE "Main"."Participant" (
    "ParticipantID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 100 INCREMENT BY 100),
    "DateOfBirth" date NOT NULL,
    "ChildID" varchar(20) NOT NULL,
    "SexID" integer NOT NULL,
    "GeneticRiskID" integer NOT NULL,
    "AddedOn" timestamp NOT NULL DEFAULT now(),
    "ModifiedOn" timestamp NOT NULL DEFAULT now(),

    CONSTRAINT "PK_Participant" PRIMARY KEY ("ParticipantID"),
    CONSTRAINT "UQ_Participant_ChildID" UNIQUE ("ChildID"),
    CONSTRAINT "FK_Participant_GeneticRisk" FOREIGN KEY ("GeneticRiskID") REFERENCES "Main"."GeneticRisk" ("GeneticRiskID"),
    CONSTRAINT "FK_Participant_Sex" FOREIGN KEY ("SexID") REFERENCES "Main"."Sex" ("SexID")
);

-- TABLE:   User
---------------------------------------
DROP TABLE IF EXISTS "Main"."User" CASCADE;

CREATE TABLE "Main"."User" (
    "UserID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 100 INCREMENT BY 100),
    "UserName" varchar(128) NULL,
    "Password" varchar(128) NULL,
    "FirstName" varchar(100) NOT NULL,
    "MiddleName" varchar(100) NULL,
    "LastName" varchar(100) NOT NULL,
    "Email" varchar(256) NOT NULL,
    "UserTypeID" integer NOT NULL,
    "IsActive" bool NOT NULL DEFAULT true,
    "IsAdmin" bool NOT NULL DEFAULT false,
    "IsLocked" bool NOT NULL DEFAULT false,
    "AddedOn" timestamp NOT NULL DEFAULT now(),
    "ModifiedOn" timestamp NOT NULL DEFAULT now(),
    
    CONSTRAINT "PK_User" PRIMARY KEY ("UserID"),
    CONSTRAINT "UQ_User_Email" UNIQUE ("Email"),
    CONSTRAINT "UQ_User_UserName" UNIQUE ("UserName"),
    CONSTRAINT "FK_User_UserType" FOREIGN KEY ("UserTypeID") REFERENCES "Main"."UserType" ("UserTypeID")
);

-- TABLE:   Session
---------------------------------------
DROP TABLE IF EXISTS "Main"."Session" CASCADE;

CREATE TABLE "Main"."Session" (
    "SessionID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    "UserID" integer NOT NULL,
    "StartedOn" timestamp NOT NULL DEFAULT now(),
    "LastAccessedOn" timestamp NOT NULL DEFAULT now(),
    
    CONSTRAINT "PK_Session" PRIMARY KEY ("SessionID"),
    CONSTRAINT "FK_Session_User" FOREIGN KEY ("UserID") REFERENCES "Main"."User" ("UserID")
);

COMMENT ON TABLE "Main"."Session" IS 'Captures coding session timing information.';
COMMENT ON COLUMN "Main"."Session"."StartedOn" IS 'The date and time the user has logged in to the system.';
COMMENT ON COLUMN "Main"."Session"."LastAccessedOn" IS 'The date and time the user has entered the last utterance code. This is updated with every coding entered.';

-- TABLE:   Recording
---------------------------------------
DROP TABLE IF EXISTS "Main"."Recording" CASCADE;

CREATE TABLE "Main"."Recording" (
    "RecordingID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 100 INCREMENT BY 5),
    "RecordingTypeID" integer NOT NULL,
    "ParticipantID" integer NOT NULL,
    "AssessmentID" varchar(25) NOT NULL,
    "RecordingDate" date NOT NULL,
    "AgeAtRecordingInMonths" real NOT NULL,
    "BaseFileName" varchar(100) NOT NULL,
    "StartTime" timestamp NOT NULL,
    "EndTime" timestamp NOT NULL,
    "ChildWakeTime" timestamp NULL,
    "Duration" interval NOT NULL,
    "ErrorCodeID" integer NULL,
    "ConsentFormVersion" smallint NULL,
    "ChildWordCount" smallint NULL,
    "HasPhrases" bool NULL,
    "DataUseOptionID" integer NULL,
    "AdultWordCount" integer NULL,
    "AdultWordCountPercentile" integer NULL,
    "AdultWordCountStandardScore" real NULL,
    "ConversationalTurnCount" integer NULL,
    "ConversationalTurnPercentile" integer NULL,
    "ConversationalTurnStandardScore" real NULL,
    "ChildVocalizationCount" integer NULL,
    "ChildVocalizationPercentile" integer NULL,
    "ChildVocalizationStandardScore" real NULL,
    "AutomatedVocalizationAssessmentPercentile" integer NULL,
    "AutomatedVocalizationAssessmentStandardScore" real NULL,
    "VocalProductivityPercentile" integer NULL,
    "VocalProductivityStandardScore" real NULL,
    "TimeZone" varchar(50) NOT NULL,
    "Meaningful" interval NOT NULL DEFAULT '0S',
    "Silence" interval NOT NULL DEFAULT '0S',
    "Electronic" interval NOT NULL DEFAULT '0S',
    "Distant" interval NOT NULL DEFAULT '0S',
    "Noise" interval NOT NULL DEFAULT '0S',
    "Overlap" interval NOT NULL DEFAULT '0S',
    "Notes" text NULL,
    "IsScrubbed" bool NOT NULL DEFAULT false,
    "IsValid" bool NOT NULL DEFAULT true,
    "AddedOn" timestamp NOT NULL DEFAULT now(),
    "ModifiedOn" timestamp NOT NULL DEFAULT now(),

    CONSTRAINT "PK_Recording" PRIMARY KEY ("RecordingID"),
    CONSTRAINT "UQ_Recording" UNIQUE ("AssessmentID", "RecordingTypeID"),
    CONSTRAINT "CK_Recording" CHECK ("EndTime" > "StartTime" AND "EndTime" - "StartTime" = "Duration"),
    CONSTRAINT "FK_Recording_ErrorCode" FOREIGN KEY ("ErrorCodeID") REFERENCES "Main"."ErrorCode" ("ErrorCodeID"),
    CONSTRAINT "FK_Recording_DataUseOption" FOREIGN KEY ("DataUseOptionID") REFERENCES "Main"."DataUseOption" ("DataUseOptionID"),
    CONSTRAINT "FK_Recording_RecordingType" FOREIGN KEY ("RecordingTypeID") REFERENCES "Main"."RecordingType" ("RecordingTypeID"),
    CONSTRAINT "FK_Recording_Participant" FOREIGN KEY ("ParticipantID") REFERENCES "Main"."Participant" ("ParticipantID")
);

COMMENT ON COLUMN "Main"."Recording"."ChildWakeTime" IS 'A manually entered value. Only valid for Home recordings.';
COMMENT ON COLUMN "Main"."Recording"."ConsentFormVersion" IS 'A manually entered value. Only valid for Home recordings.';
COMMENT ON COLUMN "Main"."Recording"."ChildWordCount" IS 'A manually entered value. Only valid for Home recordings.';
COMMENT ON COLUMN "Main"."Recording"."HasPhrases" IS 'A manually entered value. Only valid for Home recordings.';
COMMENT ON COLUMN "Main"."Recording"."DataUseOptionID" IS 'A manually entered value. Only valid for Home recordings.';
COMMENT ON COLUMN "Main"."Recording"."Meaningful" IS 'Duration coming from all near and clear human sources.';
COMMENT ON COLUMN "Main"."Recording"."Silence" IS 'Duration in which there is little to no ambient sound.';
COMMENT ON COLUMN "Main"."Recording"."Electronic" IS 'Duration coming from television or other electronic sources. (SP: TV_Elec).';
COMMENT ON COLUMN "Main"."Recording"."Distant" IS 'SP: Duration coming from all far-field human sources.';
COMMENT ON COLUMN "Main"."Recording"."Noise" IS 'SP: Duration coming from all near noises (bumps, claps, etc.)';
COMMENT ON COLUMN "Main"."Recording"."Overlap" IS 'SP: Duration coded as speech overlapping with something else.';

-- TABLE:   InterpretiveTimeSegment
---------------------------------------
DROP TABLE IF EXISTS "Main"."InterpretiveTimeSegment" CASCADE;

CREATE TABLE "Main"."InterpretiveTimeSegment" (
    "InterpretiveTimeSegmentID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    "RecordingID" integer NOT NULL,
    "FileData" bytea NOT NULL,
    "AddedOn" timestamp NOT NULL DEFAULT now(),
    "ModifiedOn" timestamp NOT NULL DEFAULT now(),

    CONSTRAINT "PK_InterpretiveTimeSegment" PRIMARY KEY ("InterpretiveTimeSegmentID"),
    CONSTRAINT "FK_InterpretiveTimeSegment_Recording" FOREIGN KEY ("RecordingID") REFERENCES "Main"."Recording" ("RecordingID")
);

COMMENT ON TABLE "Main"."InterpretiveTimeSegment" IS 'The complete compressed binary of the ITS files associated with the recordings.';

-- TABLE:   ExclusionDuration
---------------------------------------
DROP TABLE IF EXISTS "Main"."ExclusionDuration" CASCADE;

CREATE TABLE "Main"."ExclusionDuration" (
    "ExclusionDurationID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 100 INCREMENT BY 5),
    "RecordingID" integer NOT NULL,
    "StartTime" timestamp NOT NULL,
    "EndTime" timestamp NOT NULL,
    "Duration" interval NOT NULL,
    "ExclusionTypeID" integer NOT NULL,
    "AddedOn" timestamp NOT NULL DEFAULT now(),
    "ModifiedOn" timestamp NOT NULL DEFAULT now(),
    
    CONSTRAINT "PK_ExclusionDuration" PRIMARY KEY ("ExclusionDurationID"),
    CONSTRAINT "UQ_ExclusionDuration" UNIQUE ("StartTime", "EndTime"),
    CONSTRAINT "CK_ExclusionDuration" CHECK ("EndTime" > "StartTime" AND "EndTime" - "StartTime" = "Duration"),
    CONSTRAINT "FK_ExclusionDuration_ExclusionType" FOREIGN KEY ("ExclusionTypeID") REFERENCES "Main"."ExclusionType" ("ExclusionTypeID"),
    CONSTRAINT "FK_ExclusionDuration_Recording" FOREIGN KEY ("RecordingID") REFERENCES "Main"."Recording" ("RecordingID")
);

-- TABLE:   DayTypicality
---------------------------------------
DROP TABLE IF EXISTS "Main"."DayTypicality" CASCADE;

CREATE TABLE "Main"."DayTypicality" (
    "DayTypicalityID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 100 INCREMENT BY 1),
    "RecordingID" integer NOT NULL,
    "TypicalityPercentage" real NOT NULL,
    "AddedBy" integer NOT NULL,
    "AddedOn" timestamp NOT NULL DEFAULT now(),
    "ModifiedOn" timestamp NOT NULL DEFAULT now(),
    
    CONSTRAINT "PK_DayTypicality" PRIMARY KEY ("DayTypicalityID"),
    CONSTRAINT "FK_DayTypicality_Recording" FOREIGN KEY ("RecordingID") REFERENCES "Main"."Recording" ("RecordingID"),
    CONSTRAINT "FK_DayTypicality_User" FOREIGN KEY ("AddedBy") REFERENCES "Main"."User" ("UserID")
);

COMMENT ON TABLE "Main"."DayTypicality" IS 'Defines a measure of how "typical", or normal, the recording is.';

-- TABLE:   Segment
---------------------------------------
DROP TABLE IF EXISTS "Main"."Segment" CASCADE;

CREATE TABLE "Main"."Segment" (
    "SegmentID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 100 INCREMENT BY 1),
    "RecordingID" integer NOT NULL,
    "IsSelected" bool NOT NULL DEFAULT false,
    "SelectionCriterionID" integer NULL,
    "StartTime" timestamp NOT NULL,
    "EndTime" timestamp NOT NULL,
    "StartTimeInSeconds" real NOT NULL,
    "EndTimeInSeconds" real NOT NULL,
    "Duration" interval NOT NULL,
    "AdultWordCount" integer NOT NULL DEFAULT 0,
    "ConversationalTurnCount" integer NOT NULL DEFAULT 0,
    "ChildVocalizationCount" integer NOT NULL DEFAULT 0,
    "Meaningful" interval NOT NULL DEFAULT '0S',
    "Silence" interval NOT NULL DEFAULT '0S',
    "Electronic" interval NOT NULL DEFAULT '0S',
    "Distant" interval NOT NULL DEFAULT '0S',
    "Noise" interval NOT NULL DEFAULT '0S',
    "Overlap" interval NOT NULL DEFAULT '0S',
    "AddedOn" timestamp NOT NULL DEFAULT now(),
    "ModifiedOn" timestamp NOT NULL DEFAULT now(),
    
    CONSTRAINT "PK_Segment" PRIMARY KEY ("SegmentID"),
    CONSTRAINT "UQ_Segment" UNIQUE ("RecordingID", "StartTime", "EndTime"),
    CONSTRAINT "CK_Segment_Seconds" CHECK ("EndTimeInSeconds" > "StartTimeInSeconds"),
    CONSTRAINT "CK_Segment_Timestamp" CHECK ("EndTime" > "StartTime" AND "EndTime" - "StartTime" = "Duration"),
    CONSTRAINT "FK_Segment_Recording" FOREIGN KEY ("RecordingID") REFERENCES "Main"."Recording" ("RecordingID"),
    CONSTRAINT "FK_Segment_SelectionCriterion" FOREIGN KEY ("SelectionCriterionID") REFERENCES "Main"."SelectionCriterion" ("SelectionCriterionID")
);

COMMENT ON TABLE "Main"."Segment" IS 'Defines a 5-min recording segment.';
COMMENT ON COLUMN "Main"."Segment"."Meaningful" IS 'Duration coming from all near and clear human sources.';
COMMENT ON COLUMN "Main"."Segment"."Silence" IS 'Duration in which there is little to no ambient sound.';
COMMENT ON COLUMN "Main"."Segment"."Electronic" IS 'Duration coming from television or other electronic sources. (SP: TV_Elec).';
COMMENT ON COLUMN "Main"."Segment"."Distant" IS 'SP: Duration coming from all far-field human sources.';
COMMENT ON COLUMN "Main"."Segment"."Noise" IS 'SP: Duration coming from all near noises (bumps, claps, etc.)';
COMMENT ON COLUMN "Main"."Segment"."Overlap" IS 'SP: Duration coded as speech overlapping with something else.';
COMMENT ON COLUMN "Main"."Segment"."StartTimeInSeconds" IS 'The starting time of the segment, in seconds, with respect to the recording.';
COMMENT ON COLUMN "Main"."Segment"."EndTimeInSeconds" IS 'The starting time of the segment, in seconds, with respect to the recording.';

-- TABLE:   CodingBatch
---------------------------------------
DROP TABLE IF EXISTS "Main"."CodingBatch" CASCADE;

CREATE TABLE "Main"."CodingBatch" (
    "CodingBatchID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    "RecordingID" integer NOT NULL,
    "Group" integer NOT NULL,
    "AddedOn" timestamp NOT NULL DEFAULT now(),
    "ModifiedOn" timestamp NOT NULL DEFAULT now(),

    CONSTRAINT "PK_CodingBatch" PRIMARY KEY ("CodingBatchID"),
    CONSTRAINT "FK_CodingBatch_Recording" FOREIGN KEY ("RecordingID") REFERENCES "Main"."Recording" ("RecordingID")
);

COMMENT ON TABLE "Main"."CodingBatch" IS 'Defines a sequence of about three recordings that can be coded at a time. This helps produce coding results for random utterances, without the need to wait for a very long time.';

-- TABLE:   Utterance
---------------------------------------
DROP TABLE IF EXISTS "Main"."Utterance" CASCADE;

CREATE TABLE "Main"."Utterance" (
    "UtteranceID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    "SegmentID" integer NOT NULL,
    "StartTimeInSeconds" real NOT NULL,
    "EndTimeInSeconds" real NOT NULL,
    "DurationInSeconds" real NOT NULL,
    "AudioFileName" varchar(256) NOT NULL,
    "AudioFileData" bytea NOT NULL,
    "MinimumPitch" real NOT NULL,
    "MaximumPitch" real NOT NULL,
    "AveragePitch" real NOT NULL,
    "PitchRange" real NOT NULL,
    "AddedOn" timestamp NOT NULL DEFAULT now(),
    "ModifiedOn" timestamp NOT NULL DEFAULT now(),

    CONSTRAINT "PK_Utterance" PRIMARY KEY ("UtteranceID"),
    CONSTRAINT "UQ_Utterance" UNIQUE ("SegmentID", "StartTimeInSeconds", "EndTimeInSeconds"),
    CONSTRAINT "CK_Utterance_Seconds" CHECK ("EndTimeInSeconds" > "StartTimeInSeconds"),
    CONSTRAINT "FK_Utterance_Segment" FOREIGN KEY ("SegmentID") REFERENCES "Main"."Segment" ("SegmentID")
);

COMMENT ON TABLE "Main"."Utterance" IS 'Defines a small audio duration that is to be coded.';
COMMENT ON COLUMN "Main"."Utterance"."StartTimeInSeconds" IS 'The starting time of the utterance, with respect to the sound file, in seconds.';
COMMENT ON COLUMN "Main"."Utterance"."EndTimeInSeconds" IS 'The ending time of the utterance, with respect to the sound file, in seconds.';
COMMENT ON COLUMN "Main"."Utterance"."DurationInSeconds" IS 'The difference, in seconds, between the starting time and the ending time of the utterance.';

-- TABLE:   UtteranceCoding
---------------------------------------
DROP TABLE IF EXISTS "Main"."UtteranceCoding" CASCADE;

CREATE TABLE "Main"."UtteranceCoding" (
    "UtteranceCodingID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    "UtteranceID" integer NOT NULL,
    "CoderID" integer NOT NULL,
    "UtteranceTypeAnnotationID" integer NOT NULL,
    "TotalSyllableCount" smallint NOT NULL DEFAULT 0,
    "CanonicalSyllableCount" smallint NOT NULL DEFAULT 0,
    "WordSyllableCount" smallint NOT NULL DEFAULT 0,
    "WordCount" smallint NOT NULL DEFAULT 0,
    "NonCanonicalSyllableCount" smallint NOT NULL DEFAULT 0,
    "Comments" text NULL,
    "IsAcceptable" bool NOT NULL DEFAULT true,
    "AddedOn" timestamp NOT NULL DEFAULT now(),
    "ModifiedOn" timestamp NOT NULL DEFAULT now(),
    
    CONSTRAINT "PK_UtteranceCoding" PRIMARY KEY ("UtteranceCodingID"),
    CONSTRAINT "UQ_UtteranceCoding" UNIQUE ("UtteranceID", "CoderID"),
    -- CONSTRAINT "CK_UtteranceCoding_Counts" CHECK ("NonCanonicalSyllableCount" = ("TotalSyllableCount" - "CanonicalSyllableCount")),
    CONSTRAINT "FK_UtteranceCoding_User" FOREIGN KEY ("CoderID") REFERENCES "Main"."User" ("UserID"),
    CONSTRAINT "FK_UtteranceCoding_Utterance" FOREIGN KEY ("UtteranceID") REFERENCES "Main"."Utterance" ("UtteranceID"),
    CONSTRAINT "FK_UtteranceCoding_UtteranceTypeAnnotation" FOREIGN KEY ("UtteranceTypeAnnotationID") REFERENCES "Main"."UtteranceTypeAnnotation" ("UtteranceTypeAnnotationID")
);

COMMENT ON TABLE "Main"."UtteranceCoding" IS 'Defines the coding provided by three or more coders per utterance.';

-- TABLE:   UtteranceSamplePool
---------------------------------------
DROP TABLE IF EXISTS "Main"."UtteranceSamplePool" CASCADE;

CREATE TABLE "Main"."UtteranceSamplePool" (
    "UtteranceSamplePoolID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    "UtteranceID" integer NOT NULL,
    "CodingBatchGroup" integer NOT NULL,
    "CoderID" integer NULL,
    "IsProcessing" bool NOT NULL DEFAULT false,
    "AddedOn" timestamp NOT NULL DEFAULT now(),
    "ModifiedOn" timestamp NOT NULL DEFAULT now(),
    
    CONSTRAINT "PK_UtteranceSamplePool" PRIMARY KEY ("UtteranceSamplePoolID"),
    CONSTRAINT "FK_UtteranceSamplePool_User" FOREIGN KEY ("CoderID") REFERENCES "Main"."User" ("UserID"),
    CONSTRAINT "FK_UtteranceSamplePool_Utterance" FOREIGN KEY ("UtteranceID") REFERENCES "Main"."Utterance" ("UtteranceID")
);

COMMENT ON TABLE "Main"."UtteranceSamplePool" IS 'Defines a shuffled set of utterances to be presented to coders in sequence.';

-- TABLE:   LogEntry
---------------------------------------
DROP TABLE IF EXISTS "Main"."ApplicationLog" CASCADE;
DROP TABLE IF EXISTS "Main"."LogEntry" CASCADE;

CREATE TABLE "Main"."LogEntry" (
    "LogEntryID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    "TimeStamp" timestamp NOT NULL DEFAULT now(),
    "UserID" integer NULL,
    "SessionID" integer NULL,
    "Level" varchar(25) NOT NULL,
    "Module" varchar(256) NULL,
    "Function" varchar(256) NULL,
    "Message" varchar NULL,
    "Exception" varchar NULL
);